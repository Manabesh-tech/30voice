{"types":"export type Json =\n  | string\n  | number\n  | boolean\n  | null\n  | { [key: string]: Json | undefined }\n  | Json[]\n\nexport type Database = {\n  // Allows to automatically instanciate createClient with right options\n  // instead of createClient<Database, { PostgrestVersion: 'XX' }>(URL, KEY)\n  __InternalSupabase: {\n    PostgrestVersion: \"12.2.12 (cd3cf9e)\"\n  }\n  public: {\n    Tables: {\n      listen_counts: {\n        Row: {\n          created_at: string | null\n          id: string\n          ip_address: unknown | null\n          session_id: string | null\n          user_id: string | null\n          voice_note_id: string\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          ip_address?: unknown | null\n          session_id?: string | null\n          user_id?: string | null\n          voice_note_id: string\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          ip_address?: unknown | null\n          session_id?: string | null\n          user_id?: string | null\n          voice_note_id?: string\n        }\n        Relationships: []\n      }\n      product_feedback: {\n        Row: {\n          created_at: string | null\n          feedback: string\n          id: string\n          rating: number\n          user_agent: string | null\n          user_id: string | null\n        }\n        Insert: {\n          created_at?: string | null\n          feedback: string\n          id?: string\n          rating: number\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Update: {\n          created_at?: string | null\n          feedback?: string\n          id?: string\n          rating?: number\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Relationships: []\n      }\n      user_profiles: {\n        Row: {\n          company: string | null\n          created_at: string | null\n          full_name: string | null\n          id: string\n          role: string | null\n          verified: boolean | null\n        }\n        Insert: {\n          company?: string | null\n          created_at?: string | null\n          full_name?: string | null\n          id: string\n          role?: string | null\n          verified?: boolean | null\n        }\n        Update: {\n          company?: string | null\n          created_at?: string | null\n          full_name?: string | null\n          id?: string\n          role?: string | null\n          verified?: boolean | null\n        }\n        Relationships: []\n      }\n      user_votes: {\n        Row: {\n          created_at: string | null\n          id: string\n          recording_id: string\n          user_id: string\n          vote_type: string\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          recording_id: string\n          user_id: string\n          vote_type: string\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          recording_id?: string\n          user_id?: string\n          vote_type?: string\n        }\n        Relationships: []\n      }\n      voice_note_replies: {\n        Row: {\n          audio_url: string | null\n          audio_url_mp3: string | null\n          content_type: string | null\n          created_at: string | null\n          duration: number | null\n          id: string\n          reply_text: string | null\n          text_content: string | null\n          user_id: string\n          voice_note_id: string\n        }\n        Insert: {\n          audio_url?: string | null\n          audio_url_mp3?: string | null\n          content_type?: string | null\n          created_at?: string | null\n          duration?: number | null\n          id?: string\n          reply_text?: string | null\n          text_content?: string | null\n          user_id: string\n          voice_note_id: string\n        }\n        Update: {\n          audio_url?: string | null\n          audio_url_mp3?: string | null\n          content_type?: string | null\n          created_at?: string | null\n          duration?: number | null\n          id?: string\n          reply_text?: string | null\n          text_content?: string | null\n          user_id?: string\n          voice_note_id?: string\n        }\n        Relationships: []\n      }\n      voice_note_saves: {\n        Row: {\n          created_at: string | null\n          id: string\n          implemented: boolean | null\n          user_id: string\n          voice_note_id: string\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          implemented?: boolean | null\n          user_id: string\n          voice_note_id: string\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          implemented?: boolean | null\n          user_id?: string\n          voice_note_id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"voice_note_saves_voice_note_id_fkey\"\n            columns: [\"voice_note_id\"]\n            isOneToOne: false\n            referencedRelation: \"voice_notes\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      voice_note_tags: {\n        Row: {\n          created_at: string | null\n          id: string\n          tag_name: string\n          voice_note_id: string\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          tag_name: string\n          voice_note_id: string\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          tag_name?: string\n          voice_note_id?: string\n        }\n        Relationships: []\n      }\n      voice_note_votes: {\n        Row: {\n          created_at: string | null\n          id: string\n          user_id: string\n          voice_note_id: string\n          vote_type: string\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          user_id: string\n          voice_note_id: string\n          vote_type: string\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          user_id?: string\n          voice_note_id?: string\n          vote_type?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"voice_note_votes_voice_note_id_fkey\"\n            columns: [\"voice_note_id\"]\n            isOneToOne: false\n            referencedRelation: \"voice_notes\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      voice_notes: {\n        Row: {\n          action_text: string\n          audio_url: string\n          audio_url_mp3: string | null\n          created_at: string | null\n          debatable_count: number | null\n          duration: number\n          game_changer_count: number | null\n          humourous_count: number\n          id: string\n          implementation_count: number | null\n          informative_count: number | null\n          listen_count: number | null\n          low_quality_count: number | null\n          save_count: number | null\n          thought_provoking_count: number | null\n          tldr_text: string\n          transcript: string | null\n          useful_count: number | null\n          user_id: string\n        }\n        Insert: {\n          action_text: string\n          audio_url: string\n          audio_url_mp3?: string | null\n          created_at?: string | null\n          debatable_count?: number | null\n          duration: number\n          game_changer_count?: number | null\n          humourous_count?: number\n          id?: string\n          implementation_count?: number | null\n          informative_count?: number | null\n          listen_count?: number | null\n          low_quality_count?: number | null\n          save_count?: number | null\n          thought_provoking_count?: number | null\n          tldr_text: string\n          transcript?: string | null\n          useful_count?: number | null\n          user_id: string\n        }\n        Update: {\n          action_text?: string\n          audio_url?: string\n          audio_url_mp3?: string | null\n          created_at?: string | null\n          debatable_count?: number | null\n          duration?: number\n          game_changer_count?: number | null\n          humourous_count?: number\n          id?: string\n          implementation_count?: number | null\n          informative_count?: number | null\n          listen_count?: number | null\n          low_quality_count?: number | null\n          save_count?: number | null\n          thought_provoking_count?: number | null\n          tldr_text?: string\n          transcript?: string | null\n          useful_count?: number | null\n          user_id?: string\n        }\n        Relationships: []\n      }\n    }\n    Views: {\n      [_ in never]: never\n    }\n    Functions: {\n      [_ in never]: never\n    }\n    Enums: {\n      [_ in never]: never\n    }\n    CompositeTypes: {\n      [_ in never]: never\n    }\n  }\n}\n\ntype DatabaseWithoutInternals = Omit<Database, \"__InternalSupabase\">\n\ntype DefaultSchema = DatabaseWithoutInternals[Extract<keyof Database, \"public\">]\n\nexport type Tables<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof (DefaultSchema[\"Tables\"] & DefaultSchema[\"Views\"])\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"] &\n        DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Views\"])\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"] &\n      DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Views\"])[TableName] extends {\n      Row: infer R\n    }\n    ? R\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof (DefaultSchema[\"Tables\"] &\n        DefaultSchema[\"Views\"])\n    ? (DefaultSchema[\"Tables\"] &\n        DefaultSchema[\"Views\"])[DefaultSchemaTableNameOrOptions] extends {\n        Row: infer R\n      }\n      ? R\n      : never\n    : never\n\nexport type TablesInsert<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Insert: infer I\n    }\n    ? I\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema[\"Tables\"]\n    ? DefaultSchema[\"Tables\"][DefaultSchemaTableNameOrOptions] extends {\n        Insert: infer I\n      }\n      ? I\n      : never\n    : never\n\nexport type TablesUpdate<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Update: infer U\n    }\n    ? U\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema[\"Tables\"]\n    ? DefaultSchema[\"Tables\"][DefaultSchemaTableNameOrOptions] extends {\n        Update: infer U\n      }\n      ? U\n      : never\n    : never\n\nexport type Enums<\n  DefaultSchemaEnumNameOrOptions extends\n    | keyof DefaultSchema[\"Enums\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  EnumName extends DefaultSchemaEnumNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions[\"schema\"]][\"Enums\"]\n    : never = never,\n> = DefaultSchemaEnumNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions[\"schema\"]][\"Enums\"][EnumName]\n  : DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema[\"Enums\"]\n    ? DefaultSchema[\"Enums\"][DefaultSchemaEnumNameOrOptions]\n    : never\n\nexport type CompositeTypes<\n  PublicCompositeTypeNameOrOptions extends\n    | keyof DefaultSchema[\"CompositeTypes\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions[\"schema\"]][\"CompositeTypes\"]\n    : never = never,\n> = PublicCompositeTypeNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions[\"schema\"]][\"CompositeTypes\"][CompositeTypeName]\n  : PublicCompositeTypeNameOrOptions extends keyof DefaultSchema[\"CompositeTypes\"]\n    ? DefaultSchema[\"CompositeTypes\"][PublicCompositeTypeNameOrOptions]\n    : never\n\nexport const Constants = {\n  public: {\n    Enums: {},\n  },\n} as const\n"}